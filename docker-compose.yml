version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:3.3.0
    hostname: zookeeper
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:3.3.0
    hostname: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:3.3.0
    hostname: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181

  postgres:
   build: postgres
   ports:
    - "5432:5432"

  flow-maps:
    build:
     context: .
     dockerfile: Dockerfile-dev
    environment:
      KAFKA_SCHEMA_REGISTRY: http://schema-registry:8081
      KAFKA_SERVERS: kafka:29092
    volumes:
      - .:/app
      - ~/.m2:/root/.m2
      - ~/.lein:/root/.lein
    depends_on:
      - postgres
      - kafka
    ports:
      - "47480:47480"
      - "3000:3000"

  redis:
     image: redis:3.2.9
  windshaft:
    build: windshaft
    environment:
      - NODE_ENV=development
      - LUMEN_ENCRYPTION_KEY=supersecret
      - PGSSLMODE=allow
    volumes:
       - ./windshaft/config/dev:/config
    ports:
      - "4000:4000"