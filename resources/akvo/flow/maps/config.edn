{:duct.core/project-ns  akvo.flow.maps
 :duct.core/environment :production

 :duct.module/logging {}
 :duct.module.web/api {}
 :duct.module/sql {}

 :duct.database.sql/hikaricp
 {:idle-timeout      300000
  :minimum-idle      2
  :maximum-pool-size 5}

 :duct.migrator/ragtime {:migrations ^:replace #ig/ref :akvo.flow.maps.consumer.master-db.core/migration}

 :akvo.flow.maps.consumer.master-db.core/migration {}

 :akvo.flow.maps.consumer.master-db.core/master-db
 {:wait-for-migrations #ig/ref :duct.migrator/ragtime
  :master-db-pool #ig/ref :duct.database/sql
  :master-db-url #duct/env "DATABASE_URL"}

 :duct.router/cascading
 [#ig/ref :akvo.flow.maps.map-creation.handler/endpoint]

 :akvo.flow.maps.map-creation.handler/endpoint
 {:db #ig/ref :duct.database/sql
  :http-proxy-config {:connection-timeout   10000
                     :request-timeout      10000
                     :read-timeout         10000
                     :max-connections      10
                     :idle-in-pool-timeout 60000}
  :windshaft-url "http://flow-maps-windshaft:4000/layergroup"}

 :akvo.flow.maps.consumer.kafka.core/consumer
 {:db #ig/ref :akvo.flow.maps.consumer.master-db.core/master-db
  :metrics-collector #ig/ref :akvo.flow.maps.monitoring/collector
  :consumer-properties {:bootstrap.servers #duct/env "KAFKA_SERVERS"
                        :max.poll.records #duct/env ["MAX_POLL_RECORDS" Int :or 100]
                        :metadata.max.age.ms #duct/env ["METADATA_MAX_AGE_MS" Int :or 60000]}
  :schema-registry #duct/env "KAFKA_SCHEMA_REGISTRY"}

 :duct.core/handler
 {:middleware ^:distinct [#ig/ref :akvo.flow.maps.map-creation.auth/middleware
                          #ig/ref :akvo.flow.maps.monitoring/middleware]}

 :akvo.flow.maps.map-creation.auth/middleware {:url #duct/env "KEYCLOAK_URL"}

 :akvo.flow.maps.monitoring/collector {}
 :akvo.flow.maps.monitoring/middleware {:collector #ig/ref :akvo.flow.maps.monitoring/collector}
 }
